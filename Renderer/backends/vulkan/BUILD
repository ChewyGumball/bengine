load("//tools:bengine_rules.bzl", "bengine_cc_library")

package(default_visibility = ["//visibility:public"])

bengine_cc_library(
    name = "vulkan",
    srcs = [
        "DiagnosticCheckpoint.cpp",
        "VulkanBuffer.cpp",
        "VulkanCommandPool.cpp",
        "VulkanCore.cpp",
        "VulkanDescriptorPool.cpp",
        "VulkanDescriptorSetLayout.cpp",
        "VulkanEnums.cpp",
        "VulkanFence.cpp",
        "VulkanFramebuffer.cpp",
        "VulkanGraphicsPipeline.cpp",
        "VulkanImage.cpp",
        "VulkanImageView.cpp",
        "VulkanInstance.cpp",
        "VulkanLogicalDevice.cpp",
        "VulkanMemoryAllocator.cpp",
        "VulkanPhysicalDevice.cpp",
        "VulkanPipelineLayout.cpp",
        "VulkanQueue.cpp",
        "VulkanRenderPass.cpp",
        "VulkanSampler.cpp",
        "VulkanSemaphore.cpp",
        "VulkanShaderModule.cpp",
        "VulkanSwapChain.cpp",
        "VulkanSwapChainDetails.cpp",
    ],
    hdrs = [
        "DiagnosticCheckpoint.h",
        "VulkanBuffer.h",
        "VulkanCommandPool.h",
        "VulkanCore.h",
        "VulkanDescriptorPool.h",
        "VulkanDescriptorSetLayout.h",
        "VulkanEnums.h",
        "VulkanFence.h",
        "VulkanFramebuffer.h",
        "VulkanGraphicsPipeline.h",
        "VulkanImage.h",
        "VulkanImageView.h",
        "VulkanInstance.h",
        "VulkanLogicalDevice.h",
        "VulkanMemoryAllocator.h",
        "VulkanPhysicalDevice.h",
        "VulkanPipelineLayout.h",
        "VulkanPipelineShaderStage.h",
        "VulkanQueue.h",
        "VulkanRenderPass.h",
        "VulkanSampler.h",
        "VulkanSemaphore.h",
        "VulkanShaderModule.h",
        "VulkanSwapChain.h",
        "VulkanSwapChainDetails.h",
    ],
    deps = [
        "//assets/materials",
        "//core/algorithms:containers",
        "//core/algorithms:mappers",
        "//core/algorithms:optional",
        "//core/containers:visitor",
        "//core/io/file_system",
        "//core/logging",
        "//core/status",
        "@vulkan_memory_allocator",
        "@vulkan_sdk_windows//:vulkan",
    ],
)

bengine_cc_library(
    name = "vulkan_backend",
    srcs = ["VulkanRendererBackend.cpp"],
    hdrs = ["VulkanRendererBackend.h"],
    deps = [
        ":vulkan",
        "//core/containers:array",
        "//core/containers:hash_set",
        "//core/status",
        "//renderer/backends:backend",
        "//renderer/resources",
    ],
)
